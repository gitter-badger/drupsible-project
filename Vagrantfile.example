# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile for Drupsible

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

# Minimum Vagrant version required
Vagrant.require_version ">= 1.6.4"

# Use rbconfig to determine if we're on a windows host or not.
require 'rbconfig'
is_windows = (RbConfig::CONFIG['host_os'] =~ /mswin|mingw|cygwin/)
if is_windows
  install_windows_param = 'is_windows'
end

# Install required plugins if not present.
required_plugins = %w(vagrant-cachier vagrant-hostsupdater)
required_plugins.each do |plugin|
  need_restart = false
  unless Vagrant.has_plugin? plugin
    system "vagrant plugin install #{plugin}"
    need_restart = true
  end
  exec "vagrant #{ARGV.join(' ')}" if need_restart
end

ANSIBLE_INVENTORY_DIR = 'ansible/inventory'

#
# Customize as needed
#

# Default Virtualbox .box (Debian Jessie 8.0)
BOX               = 'Debian-jessie-amd64-netboot'
BOX_URL           = 'https://github.com/holms/vagrant-jessie-box/releases/download/Jessie-v0.1/Debian-jessie-amd64-netboot.box'

# Default Virtualbox parameters
GUI               = false # Enable/Disable GUI
RAM               = 128   # Default memory size in MB
PAE               = 'on'
ACPI              = 'on'
IOAPIC            = 'on'
CHIPSET           = 'ich9'

# Network configuration
DOMAIN            = ".amarlatrama.es"
NETWORK           = "192.168.50."
NETMASK           = "255.255.255.0"

# These hosts must match your Ansible inventory
HOSTS = {
   "web" => [NETWORK+"10", 512, false, BOX, PAE, ACPI, IOAPIC, CHIPSET],
   "db" => [NETWORK+"11", 512, false, BOX, PAE, ACPI, IOAPIC, CHIPSET],
}

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  HOSTS.each do | (name, cfg) |
    ipaddr, ram, gui, box, pae, acpi, ioapic, chipset = cfg

    # SSH setup
    # Vagrant >= 1.7.0 defaults to using a randomly generated RSA key.
    # We need to disable this in order to pass the correct identity from host to guest.
    config.ssh.insert_key = false

    # Help use agent forwarding
    # Windows user: use a shell like Git Bash (on the Vagrant host system). 
    cmd = `ssh-add -l`
    if not $?.success?
      puts "Starting ssh-agent..."
      `eval $(ssh-agent)`
      if $?.success?
        cmd = `ssh-add -l`
        if $?.success?
          if cmd.exclude? "insecure_private_key"
            `ssh-add ~/.vagrant.d/insecure_private_key`
            if $?.success?
              puts "Your ssh-agent was started, and Vagrant's default key has been added."
            else
              puts "Your ssh-agent was started, but Vagrant's default key could NOT be added."
              exit 1
            end
          end
        else
          puts "Your ssh-agent was started, but COULD NOT be contacted by ssh-add."
          exit 1
        end
      else
        puts "Your ssh-agent was NOT running, and could NOT be started."
        exit 1
      end
    else
      if cmd.exclude? "insecure_private_key"
        `ssh-add ~/.vagrant.d/insecure_private_key`
        puts "Your ssh-agent was already running, and Vagrant's default key has been added."
      else
        # ssh-agent is running, with Vagrant's default key loaded.
      end
    end
    
    # Allow identities to be passed from host to guest.
    # ssh-agent must be running on the host, the private keys loaded with ssh-add
    config.ssh.forward_agent = true
      
    config.vm.define name do |machine|
      machine.vm.box     = box
      machine.vm.box_url = BOX_URL
      machine.vm.guest = :debian
      machine.vm.provider "virtualbox" do |vb|
        vb.gui    = gui
        vb.memory = ram
        # Configure misc settings
        vb.customize ['modifyvm', :id,
        '--rtcuseutc', 'on',
        '--natdnshostresolver1', 'on',
        '--nictype1', 'virtio',
        '--nictype2', 'virtio']
        vb.customize ["modifyvm", :id, "--pae", pae]
        vb.customize ["modifyvm", :id, "--acpi", acpi]
        vb.customize ["modifyvm", :id, "--ioapic", ioapic]
        vb.customize ["modifyvm", :id, "--chipset", chipset]
      end

      machine.vm.hostname = name + DOMAIN
      machine.vm.network 'private_network', ip: ipaddr, netmask: NETMASK

      # Add aliases of each host to /etc/hosts
      config.hostsupdater.aliases = []

      # Prevent annoying "stdin: not a tty" errors
      config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"
      
      if name.eql?'web' 
        # Install Ansible on host named web, which becomes the controller machine
        machine.vm.provision "shell" do |sh|
          sh.path = "drupsible-install.sh"
          sh.args = ["vagrant", install_windows_param]
        end
      end 

    end

  end # HOSTS-each

  # Allow caching to be used (see the vagrant-cachier plugin)
  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.scope = :machine
    config.cache.auto_detect = false
    config.cache.enable :apt
    config.cache.enable :gem
    config.cache.enable :npm
  end
end
